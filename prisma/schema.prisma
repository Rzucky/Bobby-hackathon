generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  name          String?
  password      String
  handicapped   Boolean       @default(false)
  type          UserType
  licencePlate  String        @unique
  Reservation   Reservation[]
  reservedSpots Spot[]        @relation("UserReservedSpots")
}

model Spot {
  id                String    @id
  latitude          String
  longitude         String
  occupied          Boolean   @default(false)
  occupiedTimestamp DateTime?
  reserved_user_id  Int?
  difficult         Boolean   @default(false)
  type              SpotTypes @default(Regular)
  parkingSpotZone   Zones?    @default(Zone1)
  reserved_by       User?     @relation("UserReservedSpots", fields: [reserved_user_id], references: [id])

  @@index([id], type: Hash)
}

model Alert {
  id            Int    @id @default(autoincrement())
  message       String
  parkingSpotId String
  licensePlate  String
}

model Reservation {
  id            Int    @id @default(autoincrement())
  userId        Int
  parkingSpotId String
  endTime       String
  user          User   @relation(fields: [userId], references: [id])
}

model ReservationHistory {
  id            Int     @id @default(autoincrement())
  userId        Int
  parkingSpotId String
  endTime       String
  occupied      Boolean
}

model ReservationLength {
  id            Int    @id @default(autoincrement())
  userId        Int
  parkingSpotId String
  length        Int
  time          String
}

enum UserType {
  admin
  user
  towTruck
}

enum Zones {
  Zone1
  Zone2
  Zone3
  Special
  Zone4
}

enum SpotTypes {
  Regular
  Handicapped
  ECharging
}
