generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Alert {
  id           Int    @id @default(autoincrement())
  message      String
  latitude     String
  longitude    String
  licensePlate String
}

model Reservation {
  id            Int    @id @default(autoincrement())
  userId        Int
  parkingSpotId String
  endTime       String
  User          User   @relation(fields: [userId], references: [id])
}

model ReservationHistory {
  id            Int     @id @default(autoincrement())
  userId        Int
  parkingSpotId String
  endTime       String
  day           Int
  occupied      Boolean
  price         Float?
  parkingSpot   Spot    @relation(fields: [parkingSpotId], references: [id],  onDelete: Cascade)
}

model ReservationLength {
  id            Int    @id @default(autoincrement())
  userId        Int
  parkingSpotId String
  length        Int
  time          String
}

model Spot {
  id                 String               @id
  latitude           String
  longitude          String
  occupied           Boolean              @default(false)
  occupiedTimestamp  String?
  reserved_user_id   Int?
  difficult          Boolean              @default(false)
  type               SpotTypes            @default(Regular)
  parkingSpotZone    Zones?               @default(Zone1)
  reservationHistory ReservationHistory[]
  User               User?                @relation(fields: [reserved_user_id], references: [id])

  @@index([id], type: Hash)
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String?
  password     String
  handicapped  Boolean       @default(false)
  type         UserType
  licencePlate String        @unique
  Reservation  Reservation[]
  Spot         Spot[]
}

model Debt {
  id           Int           @id @default(autoincrement())
  userId         Int
  amount       Float
}

enum SpotTypes {
  Regular
  Handicapped
  ECharging
  Family
}

enum UserType {
  admin
  user
  towTruck
}

enum Zones {
  Zone1
  Zone2
  Zone3
  Special
  Zone4
}
